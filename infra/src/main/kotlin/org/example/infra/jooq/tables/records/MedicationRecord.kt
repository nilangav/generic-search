/*
 * This file is generated by jOOQ.
 */
package org.example.infra.jooq.tables.records


import org.example.infra.jooq.tables.Medication
import org.jooq.Field
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.TableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class MedicationRecord() : TableRecordImpl<MedicationRecord>(Medication.MEDICATION), Record4<String?, String?, Int?, String?> {

    open var code: String?
        set(value): Unit = set(0, value)
        get(): String? = get(0) as String?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var weight: Int?
        set(value): Unit = set(2, value)
        get(): Int? = get(2) as Int?

    open var image: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row4<String?, String?, Int?, String?> = super.fieldsRow() as Row4<String?, String?, Int?, String?>
    override fun valuesRow(): Row4<String?, String?, Int?, String?> = super.valuesRow() as Row4<String?, String?, Int?, String?>
    override fun field1(): Field<String?> = Medication.MEDICATION.CODE
    override fun field2(): Field<String?> = Medication.MEDICATION.NAME
    override fun field3(): Field<Int?> = Medication.MEDICATION.WEIGHT
    override fun field4(): Field<String?> = Medication.MEDICATION.IMAGE
    override fun component1(): String? = code
    override fun component2(): String? = name
    override fun component3(): Int? = weight
    override fun component4(): String? = image
    override fun value1(): String? = code
    override fun value2(): String? = name
    override fun value3(): Int? = weight
    override fun value4(): String? = image

    override fun value1(value: String?): MedicationRecord {
        this.code = value
        return this
    }

    override fun value2(value: String?): MedicationRecord {
        this.name = value
        return this
    }

    override fun value3(value: Int?): MedicationRecord {
        this.weight = value
        return this
    }

    override fun value4(value: String?): MedicationRecord {
        this.image = value
        return this
    }

    override fun values(value1: String?, value2: String?, value3: Int?, value4: String?): MedicationRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        return this
    }

    /**
     * Create a detached, initialised MedicationRecord
     */
    constructor(code: String? = null, name: String? = null, weight: Int? = null, image: String? = null): this() {
        this.code = code
        this.name = name
        this.weight = weight
        this.image = image
    }

    /**
     * Create a detached, initialised MedicationRecord
     */
    constructor(value: org.example.infra.jooq.tables.pojos.Medication?): this() {
        if (value != null) {
            this.code = value.code
            this.name = value.name
            this.weight = value.weight
            this.image = value.image
        }
    }
}

/*
 * This file is generated by jOOQ.
 */
package org.example.infra.jooq.tables.pojos


import java.io.Serializable


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
data class Medication(
    var code: String? = null,
    var name: String? = null,
    var weight: Int? = null,
    var image: String? = null
): Serializable {


    override fun equals(other: Any?): Boolean {
        if (this === other)
            return true
        if (other == null)
            return false
        if (this::class != other::class)
            return false
        val o: Medication = other as Medication
        if (this.code == null) {
            if (o.code != null)
                return false
        }
        else if (this.code != o.code)
            return false
        if (this.name == null) {
            if (o.name != null)
                return false
        }
        else if (this.name != o.name)
            return false
        if (this.weight == null) {
            if (o.weight != null)
                return false
        }
        else if (this.weight != o.weight)
            return false
        if (this.image == null) {
            if (o.image != null)
                return false
        }
        else if (this.image != o.image)
            return false
        return true
    }

    override fun hashCode(): Int {
        val prime = 31
        var result = 1
        result = prime * result + (if (this.code == null) 0 else this.code.hashCode())
        result = prime * result + (if (this.name == null) 0 else this.name.hashCode())
        result = prime * result + (if (this.weight == null) 0 else this.weight.hashCode())
        result = prime * result + (if (this.image == null) 0 else this.image.hashCode())
        return result
    }

    override fun toString(): String {
        val sb = StringBuilder("Medication (")

        sb.append(code)
        sb.append(", ").append(name)
        sb.append(", ").append(weight)
        sb.append(", ").append(image)

        sb.append(")")
        return sb.toString()
    }
}
